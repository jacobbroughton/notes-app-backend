{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalTabIndentationPlugin.dev.js", "../../@lexical/react/LexicalTabIndentationPlugin.js"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar lexical = require('lexical');\nvar react = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n/**\n * This plugin adds the ability to indent content using the tab key. Generally, we don't\n * recommend using this plugin as it could negatively affect acessibility for keyboard\n * users, causing focus to become trapped within the editor.\n */\n\nfunction TabIndentationPlugin() {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  react.useEffect(() => {\n    return editor.registerCommand(lexical.KEY_TAB_COMMAND, event => {\n      const selection = lexical.$getSelection();\n\n      if (!lexical.$isRangeSelection(selection)) {\n        return false;\n      }\n\n      event.preventDefault();\n      return editor.dispatchCommand(event.shiftKey ? lexical.OUTDENT_CONTENT_COMMAND : lexical.INDENT_CONTENT_COMMAND, undefined);\n    }, lexical.COMMAND_PRIORITY_EDITOR);\n  });\n  return null;\n}\n\nexports.TabIndentationPlugin = TabIndentationPlugin;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalTabIndentationPlugin = process.env.NODE_ENV === 'development' ? require('./LexicalTabIndentationPlugin.dev.js') : require('./LexicalTabIndentationPlugin.prod.js')\nmodule.exports = LexicalTabIndentationPlugin;"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAQA,QAAI,yBAAyB;AAC7B,QAAI,UAAU;AACd,QAAI,QAAQ;AAeZ,aAAS,uBAAuB;AAC9B,YAAM,CAAC,MAAM,IAAI,uBAAuB,0BAA0B;AAClE,YAAM,UAAU,MAAM;AACpB,eAAO,OAAO,gBAAgB,QAAQ,iBAAiB,WAAS;AAC9D,gBAAM,YAAY,QAAQ,cAAc;AAExC,cAAI,CAAC,QAAQ,kBAAkB,SAAS,GAAG;AACzC,mBAAO;AAAA,UACT;AAEA,gBAAM,eAAe;AACrB,iBAAO,OAAO,gBAAgB,MAAM,WAAW,QAAQ,0BAA0B,QAAQ,wBAAwB,MAAS;AAAA,QAC5H,GAAG,QAAQ,uBAAuB;AAAA,MACpC,CAAC;AACD,aAAO;AAAA,IACT;AAEA,YAAQ,uBAAuB;AAAA;AAAA;;;AC1C/B;AAAA;AAOA,QAAM,8BAA8B,OAAyC,4CAAkD;AAC/H,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
