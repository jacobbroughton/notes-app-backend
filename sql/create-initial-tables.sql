
drop table if exists notes.public.folders;
drop table if exists notes.public.pages;
drop table if exists notes.public.tags;
drop table if exists notes.public.tagged_items;
drop table if exists notes.public.users;
drop table if exists notes.public.user_created_color_options;
drop table if exists notes.public.session;
drop table if exists notes.public.default_color_options;
drop table if exists notes.public.user_created_color_options;

create table notes.public.default_color_options (
  id integer generated by default as identity not null,
  color_code varchar(15) not null,
  eff_status smallint not null default 1,
  created_dttm timestamp not null,
  modified_dttm timestamp default null
);

INSERT INTO notes.public.default_color_options (color_code, eff_status, created_dttm, modified_dttm)
VALUES 
    ('#FF5733', 1, NOW(), NULL),
    ('#33FF57', 1, NOW(), NULL),
    ('#3357FF', 1, NOW(), NULL),
    ('#FF33A1', 1, NOW(), NULL),
    ('#A133FF', 1, NOW(), NULL),
    ('#FF8C33', 1, NOW(), NULL),
    ('#33FF8C', 1, NOW(), NULL),
    ('#8C33FF', 1, NOW(), NULL),
    ('#FF3333', 1, NOW(), NULL),
    ('#33FFF5', 1, NOW(), NULL);


create table notes.public.folders (
  id integer generated by default as identity not null,
  parent_folder_id int default null,
  name varchar(100) not null,
  eff_status smallint not null default 1,
  created_dttm timestamp not null,
  modified_dttm timestamp default null,
  created_by_id int not null,
  modified_by_id int default null
);


create table notes.public.pages (
  page_id integer generated by default as identity not null,
  folder_id int default null,
  name varchar(100) not null,
  title varchar(1000) default null,
  body varchar(10000) default null,
  is_favorite smallint default null,
  eff_status smallint not null default 1,
  created_dttm timestamp not null,
  modified_dttm timestamp default null,
  created_by_id int not null,
  modified_by_id int default null
);


create table notes.public.tags (
  id integer generated by default as identity not null,
  name varchar(100) not null,
  color_id int default null,
  has_default_color smallint not null default 0,
  eff_status smallint not null default 1,
  created_dttm timestamp not null,
  modified_dttm timestamp default null,
  created_by_id int not null,
  modified_by_id int default null
);


create table notes.public.tagged_items (
  id integer generated by default as identity not null,
  tag_id int not null,
  item_id int not null,
  is_page smallint not null,
  eff_status smallint not null default 1,
  created_dttm timestamp not null,
  modified_dttm timestamp default null,
  created_by_id int not null,
  modified_by_id int default null
);


create table notes.public.users (
  id integer generated by default as identity not null,
  username varchar(100) default null,
  admin smallint not null default 0,
  hash varchar(1000) default null,
  salt varchar(1000) default null,
  created_dttm timestamp not null,
  modified_dttm timestamp default null
);


create table notes.public.user_created_color_options (
  id integer generated by default as identity not null,
  color_code varchar(15) not null,
  eff_status smallint not null default 1,
  created_dttm timestamp not null,
  modified_dttm timestamp default null,
  created_by_id int not null,
  modified_by_id int default null
);


CREATE TABLE notes.public.session (
  "sid" varchar NOT NULL COLLATE "default",
  "sess" json NOT NULL,
  "expire" timestamp(6) NOT NULL
)
WITH (OIDS=FALSE);

ALTER TABLE notes.public.session ADD CONSTRAINT "session_pkey" PRIMARY KEY ("sid") NOT DEFERRABLE INITIALLY IMMEDIATE;

CREATE INDEX "IDX_session_expire" ON notes.public.session ("expire");

